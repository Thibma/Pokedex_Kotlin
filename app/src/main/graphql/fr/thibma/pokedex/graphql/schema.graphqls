type Query {
  helloworld: String
  """
  Get all Pokemons 
  """
  pokemons: [Pokemon!]
  """
  Get all Talents 
  """
  talents: [Talent!]
  fetchPokemon("""The ID of a `Pokemon`.""" id: ID): Pokemon
  fetchTalent: Talent
  fetchMove: Move
  syncTalents(min: Int, max: Int): [Talent!]
  syncMoves(min: Int, max: Int): [Move!]
  syncPokemons(min: Int, max: Int): [Pokemon!]
  fetchPkmnName("""The ID of a `Pokemon`.""" id: ID): String
  fetchPkmnDescription("""The ID of a `Pokemon`.""" id: ID): String
  """
  Find a Pokemon with its Id
  """
  pokemon("""The ID of a `Pokemon`.""" id: ID): Pokemon
  """
  Insert a Pokemon in db.
  """
  insertPokemon: Pokemon
}

type Pokemon {
  _id: ID
  name: String
  pokenum: String
  type: [PokemonType]
  height: Int
  weight: Float
  color: String
  talents: [Talent]
  moves: [Move]
  evolutions: [Pokemon]
  description: String
  sprite: String
  species: String
}

"""
The possible pokemon types.
"""
enum PokemonType {
  NORMAL
  FIRE
  WATER
  ELECTRIC
  GRASS
  ICE
  FIGHTING
  POISON
  GROUND
  FLYING
  PSYCHIC
  BUG
  ROCK
  GHOST
  DRAGON
  DARK
  STEEL
  FAIRY
}

type Talent {
  _id: ID
  name: String
  description: String
  url: String
}

type Move {
  id: ID
  name: String
  description: String
  type: PokemonType
  moveType: MoveType
  power: Int
  precision: Float
  powerPoint: Int
  target: String
}

"""
The different criteria according to each one has a abilit, and these different criteria which vary according to the generations..
"""
enum MoveType {
  PHYSICAL
  SPECIAL
  STATUS
}

type Mutation {
  """
  Add a pokemon
  """
  addPokemon(input: AddPokemonInput!): AddPokemonPayload
}

type AddPokemonPayload {
  pokemon: Pokemon
  clientMutationId: String
}

input AddPokemonInput {
  _id: ID
  name: String
  pokenum: String
  type: [PokemonType]
  height: Int
  weight: Float
  color: String
  talents: [String]
  moves: [MoveInput]
  evolutions: [PokemonInput]
  description: String
  sprite: String
  clientMutationId: String
}

input MoveInput {
  id: ID
  name: String
  type: PokemonType
  moveType: MoveType
  power: Int
  precision: Float
  powerPoint: Int
  target: Int
}

input PokemonInput {
  _id: ID
  name: String
  pokenum: String
  type: [PokemonType]
  height: Int
  weight: Float
  color: String
  talents: [String]
  moves: [MoveInput]
  evolutions: [PokemonInput]
  description: String
  sprite: String
}

schema {
  query: Query
  mutation: Mutation
}
